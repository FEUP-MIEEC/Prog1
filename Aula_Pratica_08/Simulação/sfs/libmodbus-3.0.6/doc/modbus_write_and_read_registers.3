'\" t
.\"     Title: modbus_write_and_read_registers
.\"    Author: [see the "AUTHORS" section]
.\" Generator: DocBook XSL Stylesheets v1.78.1 <http://docbook.sf.net/>
.\"      Date: 04/02/2014
.\"    Manual: Libmodbus Manual
.\"    Source: libmodbus 3.0.6
.\"  Language: English
.\"
.TH "MODBUS_WRITE_AND_REA" "3" "04/02/2014" "libmodbus 3\&.0\&.6" "Libmodbus Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
modbus_write_and_read_registers \- write and read many registers in a single transaction
.SH "SYNOPSIS"
.sp
\fBint modbus_write_and_read_registers(modbus_t *\fR\fB\fIctx\fR\fR\fB, int \fR\fB\fIwrite_addr\fR\fR\fB, int \fR\fB\fIwrite_nb\fR\fR\fB, const uint16_t *\fR\fB\fIsrc\fR\fR\fB, int \fR\fB\fIread_addr\fR\fR\fB, int \fR\fB\fIread_nb\fR\fR\fB, const uint16_t *\fR\fB\fIdest\fR\fR\fB);\fR
.SH "DESCRIPTION"
.sp
The \fImodbus_write_and_read_registers()\fR function shall write the content of the \fIwrite_nb\fR holding registers from the array \fIsrc\fR to the address \fIwrite_addr\fR of the remote device then shall read the content of the \fIread_nb\fR holding registers to the address \fIread_addr\fR of the remote device\&. The result of reading is stored in \fIdest\fR array as word values (16 bits)\&.
.sp
You must take care to allocate enough memory to store the results in \fIdest\fR (at least \fInb\fR * sizeof(uint16_t))\&.
.sp
The function uses the Modbus function code 0x17 (write/read registers)\&.
.SH "RETURN VALUE"
.sp
The \fImodbus_write_and_read_registers()\fR function shall return the number of read registers if successful\&. Otherwise it shall return \-1 and set errno\&.
.SH "ERRORS"
.PP
EMBMDATA
.RS 4
Too many registers requested, Too many registers to write
.RE
.SH "SEE ALSO"
.sp
\fBmodbus_read_registers\fR(3) \fBmodbus_write_register\fR(3) \fBmodbus_write_registers\fR(3)
.SH "AUTHORS"
.sp
The libmodbus documentation was written by St\('ephane Raimbault <\m[blue]\fBstephane\&.raimbault@gmail\&.com\fR\m[]\&\s-2\u[1]\d\s+2>
.SH "NOTES"
.IP " 1." 4
stephane.raimbault@gmail.com
.RS 4
\%mailto:stephane.raimbault@gmail.com
.RE
